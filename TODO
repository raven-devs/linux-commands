
tar
gzip
gunzip

head
diff
cmp
comm
export
zip
unzip
ssh
service
df
mount
chmod
chown
ifconf
traceroute
ufw
iptables
apt
sudo
alias
dd
whatis
useradd
ping
history
hostname
host
apt-get
rename
id

sleep
time
zcat
mail
locate
rmdir
du
ip
logout
file
ip addr
uptime
curl
cron
rsync
https://developer.toradex.com/software/linux-resources/basic-linux-commands/#copy-files-between-linux-pcs
uniq
bc
ifconfig

sudo -u eno -i

./$sh_file.sh

logout

The ‘&’ operator

The ‘&’ operator allows you to run any command in the background so that you can use the terminal for other tasks. For example, you need to copy a huge file which will take a lot of time to finish, thereby, blocking your terminal for any other use. In such a situation, you can use the regular cp command as shown above but add an ampersand symbol (&) at the end to let the command run in the background.

The ‘&&’ operator

Even though the ‘&&’ symbol looks similar to the ‘&’ but it works completely differently. The ‘&&’ allows us to run two or more commands at the same time. The syntax to use the ‘&&’ operator is:

command_1 && command_2

The ‘>’ operator

The ‘>’ operator works as an output redirector and redirects the output of one command to another command and is known as the “overwrite operator”. This operator will help you to overwrite the contents of a file without even opening a text editor. For example:

echo "Test line" > test.txt

The ‘>>’ operator

This operator is known as the “append operator” and works similarly to the “overwrite operator,” except this does not overwrite a file with new contents but helps you to add new content at the end of the file. For example:

echo "Hello World" >> test.txt

Reading compressed logs without extracting
Server logs are usually gzip compressed to save disk space. It creates an issue for the developer or sysadmin analyzing the logs. You might have to scp it to your local and then extract it to access the files because, at times, you don’t have write permission to extract the logs.

-> TODO: command to read zip content!

Empty a file without deleting it
If you just want to empty the contents of a text file without deleting the file itself, you can use a command similar to this:

> filename

Find if there are files containing a particular text
There are multiple ways to search and find in Linux command line. But in the case when you just want to see if there are files that contain a particular text, you can use this command:

grep -Pri Search_Term path_to_directory
